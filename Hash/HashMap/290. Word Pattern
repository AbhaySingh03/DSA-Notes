//Date - 21/02/2023
//Q)Given a pattern and a string s, find if s follows the same pattern.
//Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.
//Example 1:
//Input: pattern = "abba", s = "dog cat cat dog"
//Output: true
//Example 2:
//Input: pattern = "abba", s = "dog cat cat fish"
//Output: false
//Example 3:
//Input: pattern = "aaaa", s = "dog cat cat dog"
//Output: false

class Solution {
    public boolean wordPattern(String pattern, String s) {
       Map<Character, String> map = new HashMap<>();
//Input: pattern = "abba", s = "dog cat cat dog"
        String[] str = s.split(" ");

        if(str.length != pattern.length()) return false;

        for(int i=0; i<pattern.length(); i++){
            char a = pattern.charAt(i);
//if map is not empty and contains 'a' and "dog" does not equal to "dog" return false   
            if(!map.isEmpty() && map.containsKey(a) && !map.get(a).equals(str[i])) return false;
//if map is not empty and contains 'a' and "dog" does not equal to "dog" then continue 
            if(!map.isEmpty() && map.containsKey(a) && map.get(a).equals(str[i])) continue;
//if map is not empty and the string ex-"dog" contains in map that is wrogly related to any other character then return false    
            if(!map.isEmpty() && map.containsValue(str[i])) return false;
            
            map.put(a,str[i]);
        }
        return true;  
    }
}
