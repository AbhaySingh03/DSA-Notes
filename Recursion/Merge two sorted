//Date = 24 / 12 / 2022

//this is the iterative solution
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
      //the new list is created 
      ListNode d = new ListNode(0);
      ListNode ptr = d;
      while(list1 != null && list2 != null){
          if(list1.val > list2.val){
              ptr.next = new ListNode(list2.val);
                ptr = ptr.next;
                list2 = list2.next;
          }else{                                          
              ptr.next = new ListNode(list1.val);           // In this line all the edge cases is covered that is if both are equal
                ptr = ptr.next;
                list1 = list1.next;
          }
      }
     if(list1 == null){
           ptr.next = list2;
       }
       if(list2 == null){
           ptr.next = list1;
       }
        return d.next;
    }
}

//Recursion Way

class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2){
     if(l1 == null){
           return l2;
       }
        if(l2 == null){
           return l1;
       }
       if(l1.val < l2.val){
          l1.next = mergeTwoLists(l1.next,l2);
          return l1;
       }else{
            l2.next = mergeTwoLists(l1,l2.next);
            return l2;
       }
    }
}
