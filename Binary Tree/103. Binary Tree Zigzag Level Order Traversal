// Date -19/02/2023

//Q) 103. Binary Tree Zigzag Level Order Traversal

 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new LinkedList();
            if(root == null) return ans;
            Queue<TreeNode> q = new LinkedList();
            q.add(root);
            int level =1;
            while(q.size() > 0){
                    List<Integer> l = new ArrayList();
                    int s = q.size();
                    for(int i=0;i<s;i++){
                            TreeNode cur  = q.poll();
                            l.add(cur.val);
                            if(cur.left != null){
                                    q.add(cur.left);
                            }
                            if(cur.right != null){
                                    q.add(cur.right);
                            }
                    }
                    if(level % 2 == 0){
                            List<Integer> l1 = new ArrayList();
                            for(int i=l.size()-1;i>=0;i--){
                                    l1.add(l.get(i));
                            }
                            ans.add(l1);
                    }else{
                            ans.add(l);
                    }
                    level++;
            }
            return ans;
    }
}
