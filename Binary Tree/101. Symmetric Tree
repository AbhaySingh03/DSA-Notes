// Date - 06/01/2023
//Q)Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
          public boolean isSameTree(TreeNode p, TreeNode q) {
    //This is the base case when both reach at end of both tree that is null it will return true 
      if(p == null || q == null) return p==q;
       
      // if val is equal or not 
       //if not return false
       if(p.val != q.val){
           return false;
       }
       
       //continue this process for same left and right
        return isSameTree(p.left,q.right) && isSameTree(p.right,q.left);
    }
    public boolean isSymmetric(TreeNode root) {
        return isSameTree(root.left,root.right);
    }
}
